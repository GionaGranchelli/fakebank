{"version":3,"sources":["component/Home/Home.js","component/Table/StatementResponseTable.js","component/Statement/Statement.js","Api/api.js","App.js","serviceWorker.js","index.js"],"names":["Home","Container","fluid","Row","Col","Badge","variant","className","Table","to","Component","StatementResponseTable","response","this","props","length","striped","bordered","hover","renderBody","records","map","record","transactionId","transactionDescription","failureDescription","Statement","state","file","undefined","error","code","errorDescription","onFormSubmit","bind","onChange","fileUpload","renderError","renderForm","e","setState","target","files","formData","FormData","append","fetch","BASE_URL","method","body","mode","then","json","postFileToValidate","preventDefault","header","subHeader","errorContent","Alert","onClose","dismissible","Heading","concat","form","onSubmit","FormFile","Label","id","type","Feedback","Button","App","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","Nav","Link","href","path","About","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.88401f0b.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport {Container, Row, Col, Badge, Table} from \"react-bootstrap\";\nimport {Link} from \"react-router-dom\";\n\nclass Home extends Component {\n\n    render() {\n\n        return (\n            <Container fluid=\"md\">\n                <Row><Col>&nbsp;</Col></Row>\n                <Row>\n                    <Col>\n                        <h1><Badge variant=\"secondary\">Rabo Home</Badge></h1>\n                    </Col>\n                </Row>\n                <Row><Col>&nbsp;</Col></Row>\n                <Row>\n                    <Col>\n                        <div className=\"sectionbody\">\n                            <div className=\"paragraph\">\n                                <h4>Rabobank receives monthly deliveries of customer statement records. This information\n                                    is delivered in two formats, CSV and XML. These records need to be validated.</h4>\n                            </div>\n                        </div>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col>&nbsp;</Col>\n                </Row>\n                <Row>\n                    <Col>\n                        <div>\n                            <div><h5>The format of the file is a simplified version of the MT940 format. The format is as follows:</h5></div>\n                            <br/>\n                            <Table>\n                                <thead>\n                                <tr>\n                                    <th>Field</th>\n                                    <th>Description</th>\n                                </tr>\n                                </thead>\n                                <tbody>\n                                <tr>\n                                    <td><p>Transaction reference</p></td>\n                                    <td><p>A numeric value</p></td>\n                                </tr>\n                                <tr>\n                                    <td><p>Account number</p></td>\n                                    <td><p>An IBAN</p></td>\n                                </tr>\n                                <tr>\n                                    <td><p>Start Balance</p></td>\n                                    <td><p>The starting balance in Euros</p></td>\n                                </tr>\n                                <tr>\n                                    <td><p>Mutation</p></td>\n                                    <td><p>Either an addition (+) or a deduction (-)</p></td>\n                                </tr>\n                                <tr>\n                                    <td><p>Description</p></td>\n                                    <td><p>Free text</p></td>\n                                </tr>\n                                <tr>\n                                    <td><p>End Balance</p></td>\n                                    <td><p>The end balance in Euros</p></td>\n                                </tr>\n                                </tbody>\n                            </Table>\n                        </div>\n                    </Col>\n                    <Col>\n                        <div>\n                            <div>\n                                <h5>If you want to start just click here <Link to=\"/statement\">Statement Upload</Link></h5>\n                            </div>\n                        </div>\n                    </Col>\n                </Row>\n            </Container>);\n    }\n}\n\nexport default Home;","import React, {Component} from \"react\";\nimport {Table} from \"react-bootstrap\";\n\nexport default class StatementResponseTable extends Component {\n\n    render() {\n        const {response} = this.props;\n        if (response.length ===  0) {\n            return <h3> Load a File! </h3>;\n        }\n        return (\n            <div>\n                <h3> Error in your Records </h3><br/>\n                <Table striped bordered hover>\n                    <thead>\n                    <tr>\n                        <th>Transaction ID</th>\n                        <th>Description</th>\n                        <th>Failure</th>\n                    </tr>\n                    </thead>\n                    {this.renderBody(response)}\n                </Table>\n            </div>\n        );\n    }\n\n    renderBody(response) {\n        const records = response.map(record => {\n            return <tr>\n                <td>{record.transactionId}</td>\n                <td>{record.transactionDescription}</td>\n                <td>{record.failureDescription}</td>\n            </tr>\n        });\n        return <tbody>{records}</tbody>\n    }\n}\n\n","import React, {Component} from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport {Badge, Col, Container, Row} from \"react-bootstrap\";\nimport {FormFile} from \"react-bootstrap\";\nimport Feedback from \"react-bootstrap/Feedback\";\nimport Button from \"react-bootstrap/Button\";\nimport {postFileToValidate} from \"../../Api/api\"\nimport Alert from \"react-bootstrap/Alert\";\nimport StatementResponseTable from \"../Table/StatementResponseTable\";\n\nclass Statement extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            file: undefined,\n            response: [],\n            error: {\n                code: undefined,\n                errorDescription: undefined\n            }\n        };\n        this.onFormSubmit = this.onFormSubmit.bind(this);\n        this.onChange = this.onChange.bind(this);\n        this.fileUpload = this.fileUpload.bind(this);\n        this.renderError = this.renderError.bind(this);\n        this.renderForm = this.renderForm.bind(this);\n    }\n\n    onChange(e) {\n        this.setState({file: e.target.files[0]})\n    }\n\n    fileUpload(file) {\n        const formData = new FormData();\n        formData.append('file', file);\n        return postFileToValidate(formData);\n    }\n\n    onFormSubmit(e) {\n        const {file} = this.state;\n        e.preventDefault();\n        if (file) {\n            this.fileUpload(file)\n                .then(response => {\n                    if (response.code) {\n                        this.setState({\n                            error: {code: response.code, errorDescription: response.errorDescription},\n                            response: []\n                        });\n                    } else {\n                        this.setState({response: response, error: {code: undefined, errorDescription: undefined}});\n                    }\n                });\n        } else {\n            this.setState({error: {code: 123, errorDescription: \"Please select a file\"}, response: []});\n        }\n\n    }\n\n    render() {\n        const {response, error} = this.state;\n        return (\n            <Container fluid=\"md\">\n                <Row><Col>&nbsp;</Col></Row>\n                <Row>\n                    <Col>\n                        <h1>\n                            <Badge variant=\"secondary\">Statement Uploader</Badge>\n                        </h1>\n                    </Col>\n                </Row>\n                {this.renderForm()}\n\n                {error.code && this.renderError(error.errorDescription)}\n\n                <StatementResponseTable response={response}/>\n            </Container>\n\n        )\n    }\n\n    renderError(errorDescription) {\n        const header = [<Row><Col><h3>Failed Transaction</h3></Col></Row>];\n        const subHeader = [<Row><Col>&nbsp;</Col></Row>];\n        const errorContent = [<Row>\n            <Col>\n                <Alert variant=\"danger\"\n                       onClose={() => this.setState({error: {code: undefined, errorDescription: undefined}})}\n                       dismissible>\n                    <Alert.Heading>Oh snap! You got an error!</Alert.Heading>\n                    <p>{errorDescription}</p>\n                </Alert>\n            </Col>\n        </Row>];\n        return header\n            .concat(subHeader)\n            .concat(errorContent);\n    }\n\n    renderForm() {\n        const header = [<Row><Col>&nbsp;</Col></Row>];\n        const form = [<Row>\n            <Col>\n                <div>\n                    <form className=\"form-group\" onSubmit={this.onFormSubmit}>\n                        <FormFile.Label>Please select a valid XML or CSV file</FormFile.Label>\n                        <input className=\"form-control-file\"\n                               id=\"exampleFormControlFile1\"\n                               type=\"file\"\n                               onChange={this.onChange}/>\n                        <Feedback type=\"invalid\">This is required</Feedback>\n                        <br/>\n                        <Button className=\"btn btn-primary\" type=\"submit\">Upload your Statement</Button>\n                    </form>\n                </div>\n            </Col>\n        </Row>];\n        return header.concat(form);\n    }\n}\n\nexport default Statement;","const BASE_URL = \"http://localhost\";\nconst PORT = \"8080\";\n\nexport const postFileToValidate = formData => {\n    const endpoint = 'loadStatement';\n    const url = BASE_URL + ':' + PORT + '/' + endpoint;\n    return fetch(url, {\n        method: \"POST\",\n        body: formData,\n        mode: 'cors'\n    }).then(response => response.json());\n};","import React from \"react\";\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route\n} from \"react-router-dom\";\nimport Home from \"./component/Home/Home\";\nimport Statement from \"./component/Statement/Statement\";\nimport {Badge, Col, Container, Nav, Navbar, Row} from \"react-bootstrap\";\n\nexport default function App() {\n    return (\n        <Router>\n            <Container fluid=\"xl\">\n                <Row>\n                    <Col>\n                        <Navbar bg=\"light\" expand=\"xl\">\n                            <Navbar.Brand>\n                                <h3>Rabo Statement Processor Uploader</h3>\n                            </Navbar.Brand>\n                            <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\n                            <Navbar.Collapse id=\"basic-navbar-nav\">\n                                <Nav className=\"mr-auto\">\n                                    <Nav.Link href=\"/\"><h3>Home</h3></Nav.Link>\n                                    <Nav.Link href=\"/about\"><h3>About</h3></Nav.Link>\n                                    <Nav.Link href=\"/statement\"><h3>Statement Upload</h3></Nav.Link>\n                                </Nav>\n                            </Navbar.Collapse>\n                        </Navbar>\n                    </Col>\n                </Row>\n                <Row><Col>&nbsp;</Col></Row>\n                <Row>\n                    <Switch>\n                        <Route path=\"/about\">\n                            <About/>\n                        </Route>\n                        <Route path=\"/statement\">\n                            <Statement/>\n                        </Route>\n                        <Route path=\"/\">\n                            <Home/>\n                        </Route>\n                    </Switch>\n                </Row>\n            </Container>\n        </Router>\n    );\n}\n\nfunction About() {\n    return <Container fluid=\"md\">\n        <Row><Col>&nbsp;</Col></Row>\n        <Row>\n            <Col>\n                <h1><Badge variant=\"secondary\">About</Badge></h1>\n            </Col>\n        </Row>\n        <Row><Col>&nbsp;</Col></Row>\n        <Row>\n            <Col>\n                <div className=\"sectionbody\">\n                    <div className=\"paragraph\">\n                        <h4>Made by Giona Granchelli</h4>\n                    </div>\n                </div>\n            </Col>\n        </Row>\n    </Container>;\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}